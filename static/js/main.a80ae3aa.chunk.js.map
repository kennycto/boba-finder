{"version":3,"sources":["components/MapMarker.js","components/MapAutoComplete.js","components/PlaceCard.js","containers/MapContainer.js","utils.js","containers/Auth.js","App.js","serviceWorker.js","index.js"],"names":["MapMarker","className","key","this","props","EnvironmentTwoTone","twoToneColor","Component","MapAutoComplete","handleSearch","value","state","autocompleteService","currentUserLatLng","length","searchQuery","input","location","radius","getQueryPredictions","response","options","map","resp","description","setState","suggestion","onSelect","geoCoderService","geocode","address","geometry","lat","lng","pos","addSingleMarker","place_id","panTo","updateCurrentUserLatLng","mapsApi","suggestions","mapsLoaded","onSearch","style","width","placeholder","disabled","PureComponent","PlaceCard","place","name","formatted_address","price_level","imageUrl","photos","getUrl","open","opening_hours","isOpen","rating","user_ratings_total","distance","duration","navigate","separator","onClick","src","alt","Array","fill","join","SmileTwoTone","MehTwoTone","CarTwoTone","green","orange","red","MapContainer","id","markers","Map","set","console","log","addMarker","newMap","forEach","cloneMap","has","get","searchResults","directionService","placesService","placesRequest","type","query","rankBy","places","RankBy","DISTANCE","textSearch","responseLength","i","directionRequest","origin","destination","travelMode","route","result","status","travelingRoute","routes","legs","addSearchResult","text","getCurrentLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","LatLng","toString","url","URL","searchParams","window","icon","AimOutlined","SearchOutlined","bootstrapURLKeys","libraries","defaultZoom","defaultCenter","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","maps","apiHasLoaded","from","values","marker","LoadingOutlined","AutocompleteService","PlacesService","DirectionsService","Geocoder","setCenter","results","sort","a","b","React","Auth","handleSubmit","labelCol","span","wrapperCol","onFinish","Item","label","rules","message","required","min","hasFeedback","offset","htmlType","App","exact","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.a80ae3aa.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { EnvironmentTwoTone } from \"@ant-design/icons\";\n\nclass MapMarker extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"MapMarker\" key={this.props.key}>\n\t\t\t\t<EnvironmentTwoTone className=\"icon\" twoToneColor=\"#eb2f96\" />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default MapMarker;\n","import React, { PureComponent } from \"react\";\nimport { AutoComplete } from \"antd\";\n\nclass MapAutoComplete extends PureComponent {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmap: this.props.map,\n\t\t\tmapsApi: this.props.mapsApi,\n\t\t\taddSingleMarker: this.props.addSingleMarker,\n\t\t\tupdateCurrentUserLatLng: this.props.updateCurrentUserLatLng,\n\t\t\tsuggestions: [],\n\t\t\toptions: [],\n\t\t\tcurrentUserLatLng: this.props.currentUserLatLng,\n\t\t\tautocompleteService: this.props.autocompleteService,\n\t\t\tgeoCoderService: this.props.geoCoderService,\n\t\t\tmapsLoaded: this.props.mapsLoaded\n\t\t};\n\t}\n\n\tcomponentDidUpdate() {\n\t\tthis.setState({\n\t\t\tmap: this.props.map,\n\t\t\tmapsApi: this.props.mapsApi,\n\t\t\tcurrentUserLatLng: this.props.currentUserLatLng,\n\t\t\tautocompleteService: this.props.autocompleteService,\n\t\t\tgeoCoderService: this.props.geoCoderService,\n\t\t\tmapsLoaded: this.props.mapsLoaded\n\t\t});\n\t}\n\n\thandleSearch = value => {\n\t\tconst { autocompleteService, currentUserLatLng } = this.state;\n\n\t\tif (value.length > 0) {\n\t\t\tconst searchQuery = {\n\t\t\t\tinput: value,\n\t\t\t\tlocation: currentUserLatLng,\n\t\t\t\tradius: 30000\n\t\t\t};\n\t\t\tautocompleteService.getQueryPredictions(searchQuery, response => {\n\t\t\t\tif (response) {\n\t\t\t\t\tconst options = response.map(resp => {\n\t\t\t\t\t\treturn { ...resp, value: resp.description };\n\t\t\t\t\t});\n\t\t\t\t\tthis.setState({ options, suggestion: response });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\tonSelect = value => {\n\t\tconst { map } = this.state;\n\t\tthis.state.geoCoderService.geocode({ address: value }, response => {\n\t\t\tconst { location } = response[0].geometry;\n\t\t\tvar lat = location.lat();\n\t\t\tvar lng = location.lng();\n\t\t\tconst pos = { lat, lng };\n\t\t\tthis.props.addSingleMarker(lat, lng, value, response[0].place_id);\n\t\t\tmap.panTo(pos);\n\t\t\tthis.props.updateCurrentUserLatLng(pos);\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { options } = this.state;\n\t\treturn (\n\t\t\t<div className=\"MapAutoComplete\">\n\t\t\t\t<AutoComplete\n\t\t\t\t\toptions={options}\n\t\t\t\t\tonSearch={this.handleSearch}\n\t\t\t\t\tonSelect={this.onSelect}\n\t\t\t\t\tstyle={{ width: 200 }}\n\t\t\t\t\tplaceholder=\"Enter where you at\"\n\t\t\t\t\tdisabled={!this.props.mapsLoaded}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default MapAutoComplete;\n","import React, { PureComponent } from \"react\";\nimport { CarTwoTone, SmileTwoTone, MehTwoTone } from \"@ant-design/icons\";\nimport { green, orange, red } from \"@ant-design/colors\";\n\nclass PlaceCard extends PureComponent {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tconst place = props.place;\n\t\tthis.place = place;\n\t\tthis.name = place.name;\n\t\tthis.formatted_address = place.formatted_address;\n\t\tthis.price_level = place.price_level;\n\t\tthis.imageUrl = place.photos[0].getUrl();\n\t\tthis.open = place.opening_hours.isOpen();\n\t\tthis.rating = place.rating;\n\t\tthis.user_ratings_total = place.user_ratings_total;\n\t\tthis.distance = place.distance;\n\t\tthis.duration = place.duration;\n\t\tthis.navigate = props.navigate;\n\t}\n\n\trender() {\n\t\tconst separator = <span>&nbsp;·&nbsp;</span>;\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"PlaceCard\"\n\t\t\t\tonClick={() => this.props.navigate(this.place)}\n\t\t\t>\n\t\t\t\t<div className=\"header\">{this.name}</div>\n\t\t\t\t<img src={this.imageUrl} alt={this.name} />\n\t\t\t\t<div className=\"details\">\n\t\t\t\t\t<div className=\"sub-header\">\n\t\t\t\t\t\t<span>{this.rating} Rating</span>\n\t\t\t\t\t\t{separator}\n\t\t\t\t\t\t<span>{this.user_ratings_total} Reviews</span>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<span className=\"center\">{this.formatted_address}</span>\n\t\t\t\t\t<div className=\"multi-detail\">\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{new Array(this.price_level).fill(\"$\").join(\"\")}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t{separator}\n\t\t\t\t\t\t{this.open ? (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<span>Open </span>\n\t\t\t\t\t\t\t\t<SmileTwoTone />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<span>Closed </span>\n\t\t\t\t\t\t\t\t<MehTwoTone />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"multi-detail footer\">\n\t\t\t\t\t\t<CarTwoTone className=\"icon\" />\n\n\t\t\t\t\t\t<span>{this.distance}</span>\n\t\t\t\t\t\t{separator}\n\t\t\t\t\t\t<span>{this.duration}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tcomputeHeaderBgColor(rating) {\n\t\tif (rating >= 4.0) {\n\t\t\treturn green[4];\n\t\t} else if (rating >= 3.0) {\n\t\t\treturn orange[4];\n\t\t} else {\n\t\t\treturn red[4];\n\t\t}\n\t}\n}\n\nexport default PlaceCard;\n","import React from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport MapMarker from \"../components/MapMarker\";\nimport MapAutoComplete from \"../components/MapAutoComplete\";\nimport PlaceCard from \"../components/PlaceCard\";\nimport { Button } from \"antd\";\nimport {\n\tSearchOutlined,\n\tAimOutlined,\n\tLoadingOutlined\n} from \"@ant-design/icons\";\nimport { cloneMap } from \"../utils\";\n\nconst MAP_API_KEY = \"AIzaSyBwQDKEdMSdwUt9-ep22TOncRz0XtgCSQw\";\nconst TIME_LIMIT_IN_MINUTES = 30;\n\nclass MapContainer extends React.PureComponent {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tpos: props.pos,\n\t\t\tmapsLoaded: false,\n\t\t\tmap: {},\n\t\t\tmapsApi: {},\n\t\t\tsearchResults: [],\n\t\t\tmarkers: new Map(),\n\t\t\tcurrentUserLatLng: {},\n\t\t\tautocompleteService: {},\n\t\t\tplacesService: {},\n\t\t\tgeoCoderService: {},\n\t\t\tdirectionService: {}\n\t\t};\n\t}\n\n\tcomponentDidUpdate() {\n\t\tthis.setState({ pos: this.props.pos });\n\t}\n\n\trender() {\n\t\tif (!this.state.pos)\n\t\t\treturn (\n\t\t\t\t<div className=\"Loading\">\n\t\t\t\t\t<LoadingOutlined className=\"icon-large\" />\n\t\t\t\t</div>\n\t\t\t);\n\t\treturn (\n\t\t\t<div className=\"MapContainer\">\n\t\t\t\t<section className=\"GoogleMapReact\">\n\t\t\t\t\t<div className=\"search\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t\ticon={<AimOutlined />}\n\t\t\t\t\t\t\tonClick={this.getCurrentLocation}\n\t\t\t\t\t\t\tdisabled={!this.state.mapsLoaded}\n\t\t\t\t\t\t></Button>\n\t\t\t\t\t\t<MapAutoComplete\n\t\t\t\t\t\t\tcurrentUserLatLng={this.state.currentUserLatLng}\n\t\t\t\t\t\t\tautocompleteService={this.state.autocompleteService}\n\t\t\t\t\t\t\tgeoCoderService={this.state.geoCoderService}\n\t\t\t\t\t\t\tmapsApi={this.state.mapsApi}\n\t\t\t\t\t\t\tmap={this.state.map}\n\t\t\t\t\t\t\taddSingleMarker={this.addSingleMarker}\n\t\t\t\t\t\t\tupdateCurrentUserLatLng={\n\t\t\t\t\t\t\t\tthis.updateCurrentUserLatLng\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmapsLoaded={this.state.mapsLoaded}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t\ticon={<SearchOutlined />}\n\t\t\t\t\t\t\tonClick={this.handleSearch}\n\t\t\t\t\t\t\tdisabled={!this.state.mapsLoaded}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tFind Boba\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<GoogleMapReact\n\t\t\t\t\t\tbootstrapURLKeys={{\n\t\t\t\t\t\t\tkey: MAP_API_KEY,\n\t\t\t\t\t\t\tlibraries: [\"places\", \"directions\"]\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdefaultZoom={12}\n\t\t\t\t\t\tdefaultCenter={{ lat: 37.774929, lng: -122.419418 }}\n\t\t\t\t\t\tyesIWantToUseGoogleMapApiInternals={true}\n\t\t\t\t\t\tonGoogleApiLoaded={({ map, maps }) =>\n\t\t\t\t\t\t\tthis.apiHasLoaded(map, maps)\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{Array.from(this.state.markers.values()).map(marker => (\n\t\t\t\t\t\t\t<MapMarker\n\t\t\t\t\t\t\t\tname={marker.name}\n\t\t\t\t\t\t\t\tkey={marker.id}\n\t\t\t\t\t\t\t\tlat={marker.lat}\n\t\t\t\t\t\t\t\tlng={marker.lng}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</GoogleMapReact>\n\t\t\t\t</section>\n\t\t\t\t<div className=\"results\">\n\t\t\t\t\t{this.state.searchResults.map(result => (\n\t\t\t\t\t\t<PlaceCard\n\t\t\t\t\t\t\tplace={result}\n\t\t\t\t\t\t\tkey={result.id}\n\t\t\t\t\t\t\tnavigate={this.navigate}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tapiHasLoaded(map, mapsApi) {\n\t\tlet lat = 37.774929,\n\t\t\tlng = -122.41948;\n\t\tthis.setState({\n\t\t\tmapsLoaded: true,\n\t\t\tmap,\n\t\t\tmapsApi,\n\t\t\tautocompleteService: new mapsApi.places.AutocompleteService(),\n\t\t\tplacesService: new mapsApi.places.PlacesService(map),\n\t\t\tdirectionService: new mapsApi.DirectionsService(),\n\t\t\tgeoCoderService: new mapsApi.Geocoder()\n\t\t});\n\t\tif (navigator.geolocation) {\n\t\t\tnavigator.geolocation.getCurrentPosition(position => {\n\t\t\t\tlat = position.coords.latitude;\n\t\t\t\tlng = position.coords.longitude;\n\t\t\t\tvar pos = { lat, lng };\n\t\t\t\tmap.setCenter(pos);\n\t\t\t\tthis.setState({\n\t\t\t\t\tcurrentUserLatLng: new mapsApi.LatLng(lat, lng)\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\tvar pos = { lat, lng };\n\t\t\tmap.setCenter(pos);\n\t\t\tthis.setState({\n\t\t\t\tcurrentUserLatLng: new mapsApi.LatLng(lat, lng)\n\t\t\t});\n\t\t}\n\t}\n\n\taddSingleMarker = (lat, lng, name, id) => {\n\t\tconst markers = new Map();\n\t\tmarkers.set(id, { lat, lng, name, id });\n\t\tconsole.log(`Added new \"${name}\" Marker`);\n\t\tthis.setState({ markers });\n\t};\n\n\taddMarker = (lat, lng, name, id) => {\n\t\tconst prevMarkers = this.state.markers;\n\t\tconst markers = cloneMap(prevMarkers);\n\n\t\tif (markers.has(id)) {\n\t\t\tmarkers.get(id).lat = lat;\n\t\t\tmarkers.get(id).lng = lng;\n\t\t\tconsole.log(`Updated \"${name}\" Marker`);\n\t\t} else {\n\t\t\tmarkers.set(id, { lat, lng, name, id });\n\t\t\tconsole.log(`Added new \"${name}\" Marker`);\n\t\t}\n\n\t\tthis.setState({ markers });\n\t};\n\n\thandleSearch = () => {\n\t\tthis.setState({ searchResults: [], markers: new Map() });\n\t\tconst {\n\t\t\tmapsApi,\n\t\t\tdirectionService,\n\t\t\tplacesService,\n\t\t\tcurrentUserLatLng\n\t\t} = this.state;\n\n\t\tconst placesRequest = {\n\t\t\tlocation: currentUserLatLng,\n\t\t\ttype: [\n\t\t\t\t\"restaurant\",\n\t\t\t\t\"cafe\",\n\t\t\t\t\"food\",\n\t\t\t\t\"points_of_interest\",\n\t\t\t\t\"establishment\"\n\t\t\t],\n\t\t\tquery: \"boba, bubble, milk, tea, 波霸, 奶茶\",\n\t\t\trankBy: mapsApi.places.RankBy.DISTANCE\n\t\t};\n\n\t\tplacesService.textSearch(placesRequest, response => {\n\t\t\tconst responseLength = response.length < 10 ? response.length : 10;\n\t\t\tfor (let i = 0; i < responseLength; i++) {\n\t\t\t\tconst place = response[i];\n\t\t\t\tconst address = place.formatted_address;\n\n\t\t\t\tconst directionRequest = {\n\t\t\t\t\torigin: currentUserLatLng,\n\t\t\t\t\tdestination: address,\n\t\t\t\t\ttravelMode: \"DRIVING\"\n\t\t\t\t};\n\n\t\t\t\tdirectionService.route(directionRequest, (result, status) => {\n\t\t\t\t\tif (status !== \"OK\") return;\n\t\t\t\t\tconst travelingRoute = result.routes[0].legs[0];\n\t\t\t\t\tif (travelingRoute) {\n\t\t\t\t\t\tconst travelingTimeInMinutes =\n\t\t\t\t\t\t\ttravelingRoute.duration.value / 60;\n\n\t\t\t\t\t\tif (travelingTimeInMinutes < TIME_LIMIT_IN_MINUTES) {\n\t\t\t\t\t\t\tthis.addSearchResult(\n\t\t\t\t\t\t\t\tplace,\n\t\t\t\t\t\t\t\ttravelingRoute.distance.text,\n\t\t\t\t\t\t\t\ttravelingRoute.duration.text\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tthis.addMarker(\n\t\t\t\t\t\t\t\tplace.geometry.location.lat(),\n\t\t\t\t\t\t\t\tplace.geometry.location.lng(),\n\t\t\t\t\t\t\t\tplace.name,\n\t\t\t\t\t\t\t\tplace.place_id\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n\n\taddSearchResult(place, distance, duration) {\n\t\tlet results = [\n\t\t\t...this.state.searchResults,\n\t\t\t{ ...place, distance, duration }\n\t\t];\n\t\tresults = results.sort((a, b) => {\n\t\t\treturn b.rating - a.rating;\n\t\t});\n\t\tthis.setState({ searchResults: results });\n\t}\n\n\tgetCurrentLocation = () => {\n\t\tconst { map } = this.state;\n\t\tif (navigator.geolocation) {\n\t\t\tnavigator.geolocation.getCurrentPosition(position => {\n\t\t\t\tvar pos = {\n\t\t\t\t\tlat: position.coords.latitude,\n\t\t\t\t\tlng: position.coords.longitude\n\t\t\t\t};\n\t\t\t\tmap.panTo(pos);\n\t\t\t\tthis.updateCurrentUserLatLng(pos);\n\t\t\t\tthis.addSingleMarker(pos.lat, pos.lng, \"You\", \"\");\n\t\t\t});\n\t\t}\n\t};\n\n\tupdateCurrentUserLatLng = pos => {\n\t\tconst { mapsApi } = this.state;\n\t\tthis.setState({\n\t\t\tcurrentUserLatLng: new mapsApi.LatLng(pos.lat, pos.lng)\n\t\t});\n\t};\n\n\tnavigate = place => {\n\t\tconst { currentUserLatLng } = this.state;\n\t\tconst BASE_URL = \"https://www.google.com/maps/dir/\";\n\t\tconst origin = `${currentUserLatLng.lat().toString()},\n\t\t\t${currentUserLatLng.lng().toString()}`;\n\t\tconst url = new URL(BASE_URL);\n\t\turl.searchParams.set(\"api\", 1);\n\t\turl.searchParams.set(\"origin\", origin);\n\t\turl.searchParams.set(\"destination\", place.formatted_address);\n\t\t// url.searchParams.set(\"destination_place_id\", place.place_id);\n\t\turl.searchParams.set(\"travelmode\", \"driving\");\n\t\twindow.open(url);\n\t};\n}\n\nexport default MapContainer;\n","export function cloneMap(map) {\n\tconst newMap = new Map();\n\tmap.forEach((value, key) => {\n\t\tnewMap.set(key, { ...value });\n\t});\n\treturn newMap;\n}\n","import React, { Component } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport * as actions from \"../store/actions\";\nimport { connect } from \"react-redux\";\n\nclass Auth extends Component {\n\thandleSubmit = values => {\n\t\tconsole.log(\"Success:\", values);\n\t\t// this.props.onAuth(this.state.email.value, this.state.password.value);\n\t};\n\n\trender() {\n\t\tconst layout = {\n\t\t\tlabelCol: {\n\t\t\t\tspan: 8\n\t\t\t},\n\n\t\t\twrapperCol: {\n\t\t\t\tspan: 16\n\t\t\t}\n\t\t};\n\n\t\tconst tailLayout = {\n\t\t\twrapperCol: {\n\t\t\t\toffset: 8,\n\t\t\t\tspan: 16\n\t\t\t}\n\t\t};\n\n\t\treturn (\n\t\t\t<div className=\"Auth\">\n\t\t\t\t<Form {...layout} name=\"basic\" onFinish={this.handleSubmit}>\n\t\t\t\t\t<Form.Item\n\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\tname=\"Email\"\n\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: \"email\",\n\t\t\t\t\t\t\t\tmessage: \"This is not a valid email!\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\tmessage: \"Please input your email!\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Input />\n\t\t\t\t\t</Form.Item>\n\t\t\t\t\t<Form.Item\n\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\trules={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\tmin: 6,\n\t\t\t\t\t\t\t\tmessage: \"Please input your password!\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]}\n\t\t\t\t\t\thasFeedback\n\t\t\t\t\t>\n\t\t\t\t\t\t<Input />\n\t\t\t\t\t</Form.Item>\n\t\t\t\t\t<Form.Item {...tailLayout}>\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonAuth: (email, password) => dispatch(actions.auth(email, password))\n\t};\n};\n\nexport default Auth;\n// export default Form.create()(connect(null, mapDispatchToProps)(Auth));\n","import React from \"react\";\nimport MapContainer from \"./containers/MapContainer\";\nimport Auth from \"./containers/Auth\";\nimport { Switch, Route } from \"react-router-dom\";\n\nclass App extends React.PureComponent {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { pos: null };\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<MapContainer pos={this.state.pos} />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route exact path=\"/auth\">\n\t\t\t\t\t\t<Auth />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tcomponentDidMount() {\n\t\tif (navigator.geolocation) {\n\t\t\tnavigator.geolocation.getCurrentPosition(position => {\n\t\t\t\tvar pos = {\n\t\t\t\t\tlat: position.coords.latitude,\n\t\t\t\t\tlng: position.coords.longitude\n\t\t\t\t};\n\t\t\t\tthis.setState({ pos });\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport \"antd/dist/antd.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n\t<HashRouter>\n\t\t<App />\n\t</HashRouter>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}